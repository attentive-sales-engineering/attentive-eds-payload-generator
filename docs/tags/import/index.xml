<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Import on Attentive EDS</title>
    <link>https://attentive-sales-engineering.github.io/attentive-eds-payload-generator/tags/import/</link>
    <description>Recent content in Import on Attentive EDS</description>
    <generator>Hugo</generator>
    <language>en</language>
    <atom:link href="https://attentive-sales-engineering.github.io/attentive-eds-payload-generator/tags/import/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Import JSON Payload</title>
      <link>https://attentive-sales-engineering.github.io/attentive-eds-payload-generator/eds/import/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://attentive-sales-engineering.github.io/attentive-eds-payload-generator/eds/import/</guid>
      <description>&lt;div class=&#34;p-2&#34; id=&#34;import&#34;&gt;&#xA;&#xA;  &#xA;&#xA;  &lt;dialog id=&#34;apiDialog&#34;&gt;&#xA;    &lt;form method=&#34;dialog&#34;&gt;&#xA;      &lt;h2&gt;EDS Job&lt;/h2&gt;&#xA;      &lt;div class=&#34;task-id&#34;&gt;&#xA;        &lt;label for=&#34;task_id&#34;&gt;Task ID&lt;/label&gt;&#xA;        &lt;input name=&#34;task_id&#34; id=&#34;task_id&#34; ctype=&#34;text&#34; placeholder=&#34;Enter task_id of job to fetch&#34; autocomplete=&#34;off&#34;&gt;&lt;br&gt;&#xA;      &lt;/div&gt;&#xA;      &lt;div class=&#34;client-id&#34;&gt;&#xA;        &lt;label for=&#34;clientId&#34;&gt;Client ID&lt;/label&gt;&#xA;        &lt;input name=&#34;clientId&#34; id=&#34;clientId&#34; ctype=&#34;text&#34; placeholder=&#34;Enter client ID&#34; autocomplete=&#34;off&#34;&gt;&lt;br&gt;&#xA;      &lt;/div&gt;&#xA;      &lt;div class=&#34;client-name&#34;&gt;&#xA;        &lt;label for=&#34;task_name&#34;&gt;Task Name&lt;/label&gt;&#xA;        &lt;input name=&#34;task_name&#34; id=&#34;task_name&#34; ctype=&#34;text&#34; placeholder=&#34;Enter client Name&#34; autocomplete=&#34;off&#34;&gt;&lt;br&gt;&#xA;      &lt;/div&gt;&#xA;      &lt;div class=&#34;token&#34;&gt;&#xA;        &lt;a id=&#34;clientIdUrl&#34; class=&#34;&#34; href=&#34;https://ui.attentivemobile.com/home&#34; target=&#34;_blank&#34;&gt;Open companyId in new tab&lt;/a&gt;&#xA;        &lt;label for=&#34;token&#34;&gt;attentive-auth-token&lt;/label&gt;&#xA;        &lt;br&gt;&#xA;        &lt;textarea name=&#34;token&#34; id=&#34;token&#34; cols=&#34;50&#34; rows=&#34;4&#34; placeholder=&#34;Paste &#39;attentive-auth-token&#39; from Attentive UI Session storage&#34;&gt;&lt;/textarea&gt;&lt;br&gt;&#xA;      &lt;/div&gt;&#xA;      &lt;input id=&#34;method&#34; type=&#34;hidden&#34;&gt;&#xA;      &lt;input id=&#34;crud&#34; type=&#34;hidden&#34;&gt;&#xA;      &lt;button id=&#34;apiDialogSubmitBtn&#34; type=&#34;&#34;&gt;Submit&lt;/button&gt;&#xA;      &lt;button id=&#34;apiDialogCancelBtn&#34; type=&#34;&#34;&gt;Cancel&lt;/button&gt;&#xA;    &lt;/form&gt;&#xA;  &lt;/dialog&gt;&#xA;&#xA;  &lt;dialog id=&#34;exportDialog&#34;&gt;&#xA;    &lt;form method=&#34;dialog&#34;&gt;&#xA;      &lt;h2&gt;Export JSON Payload&lt;/h2&gt;&#xA;      &lt;div class=&#34;client-name&#34;&gt;&#xA;        &lt;label for=&#34;filename&#34;&gt;Export Filename&lt;/label&gt;&#xA;        &lt;input name=&#34;filename&#34; id=&#34;filename&#34; ctype=&#34;text&#34; placeholder=&#34;Enter filename for export file&#34; autocomplete=&#34;off&#34;&gt;&lt;br&gt;&#xA;      &lt;/div&gt;&#xA;      &lt;button id=&#34;exportDialogSubmitBtn&#34; type=&#34;&#34;&gt;&lt;a id=&#34;exportDialogSubmitLink&#34; class=&#34;btn&#34; href=&#34;&#34;&gt;Submit&lt;/a&gt;&lt;/button&gt;&#xA;      &lt;button id=&#34;exportDialogCancelBtn&#34; type=&#34;&#34;&gt;Cancel&lt;/button&gt;&#xA;    &lt;/form&gt;&#xA;  &lt;/dialog&gt;&#xA;&#xA;  &lt;dialog id=&#34;importDialog&#34;&gt;&#xA;    &lt;form method=&#34;post&#34; enctype=&#34;multipart/form-data&#34;&gt;&#xA;      &lt;div&gt;&#xA;        &#xA;        &lt;input type=&#34;file&#34; id=&#34;json_upload&#34; name=&#34;json_upload&#34; accept=&#34;.json&#34; /&gt;&#xA;      &lt;/div&gt;&#xA;    &lt;/form&gt;&#xA;  &lt;/dialog&gt;&#xA;&#xA;  &lt;div data-form&gt;&#xA;    &lt;div class=&#34;input-group mb-3&#34;&gt;&#xA;      &lt;select class=&#34;form-select flex-grow-0 w-auto d-none&#34; data-method&gt;&#xA;        &lt;option value=&#34;GET&#34;&gt;GET&lt;/option&gt;&#xA;        &lt;option value=&#34;POST&#34;&gt;POST&lt;/option&gt;&#xA;        &lt;option value=&#34;PUT&#34;&gt;PUT&lt;/option&gt;&#xA;        &lt;option value=&#34;PATCH&#34;&gt;PATCH&lt;/option&gt;&#xA;        &lt;option value=&#34;DELETE&#34;&gt;DELETE&lt;/option&gt;&#xA;      &lt;/select&gt;&#xA;      &lt;input data-url required class=&#34;form-control mono-url&#34; type=&#34;url&#34; placeholder=&#34;https://example.com&#34; value=&#34;&#34; /&gt;&#xA;      &#xA;    &lt;/div&gt;&#xA;    &lt;ul class=&#34;nav nav-tabs&#34; role=&#34;tablist&#34;&gt;&#xA;      &lt;li class=&#34;nav-item d-none&#34; role=&#34;presentation&#34; data-source-section&gt;&#xA;        &lt;button class=&#34;nav-link active&#34; id=&#34;import-request-source-tab&#34; data-bs-toggle=&#34;tab&#34; data-bs-target=&#34;#import-request-source&#34; type=&#34;button&#34; role=&#34;tab&#34; aria-controls=&#34;request-source&#34; aria-selected=&#34;true&#34;&gt;&#xA;          File&#xA;        &lt;/button&gt;&#xA;      &lt;/li&gt;&#xA;      &lt;li class=&#34;nav-item d-none&#34; role=&#34;presentation&#34; data-sftp-section&gt;&#xA;        &lt;button class=&#34;nav-link&#34; id=&#34;import-request-sftp-tab&#34; data-bs-toggle=&#34;tab&#34; data-bs-target=&#34;#import-request-sftp&#34; type=&#34;button&#34; role=&#34;tab&#34; aria-controls=&#34;request-sftp&#34; aria-selected=&#34;true&#34;&gt;&#xA;          SFTP&#xA;        &lt;/button&gt;&#xA;      &lt;/li&gt;&#xA;      &lt;li class=&#34;nav-item d-none&#34; role=&#34;presentation&#34; data-encryption-section&gt;&#xA;        &lt;button class=&#34;nav-link&#34; id=&#34;import-request-encryption-tab&#34; data-bs-toggle=&#34;tab&#34; data-bs-target=&#34;#import-request-encryption&#34; type=&#34;button&#34; role=&#34;tab&#34; aria-controls=&#34;request-encryption&#34; aria-selected=&#34;true&#34;&gt;&#xA;          Encrypt&#xA;        &lt;/button&gt;&#xA;      &lt;/li&gt;&#xA;      &lt;li class=&#34;nav-item d-none&#34; role=&#34;presentation&#34; data-schedule-section&gt;&#xA;        &lt;button class=&#34;nav-link&#34; id=&#34;import-request-schedule-tab&#34; data-bs-toggle=&#34;tab&#34; data-bs-target=&#34;#import-request-schedule&#34; type=&#34;button&#34; role=&#34;tab&#34; aria-controls=&#34;request-schedule&#34; aria-selected=&#34;false&#34;&gt;&#xA;          Schedule&#xA;        &lt;/button&gt;&#xA;      &lt;/li&gt;&#xA;      &lt;li class=&#34;nav-item d-none&#34; role=&#34;presentation&#34; data-meta-section&gt;&#xA;        &lt;button class=&#34;nav-link&#34; id=&#34;import-request-meta-tab&#34; data-bs-toggle=&#34;tab&#34; data-bs-target=&#34;#import-request-meta&#34; type=&#34;button&#34; role=&#34;tab&#34; aria-controls=&#34;request-meta&#34; aria-selected=&#34;true&#34;&gt;&#xA;          Meta&#xA;        &lt;/button&gt;&#xA;      &lt;/li&gt;&#xA;      &lt;li class=&#34;nav-item d-none&#34; role=&#34;presentation&#34; data-user-section&gt;&#xA;        &lt;button class=&#34;nav-link&#34; id=&#34;import-request-user-tab&#34; data-bs-toggle=&#34;tab&#34; data-bs-target=&#34;#import-request-user&#34; type=&#34;button&#34; role=&#34;tab&#34; aria-controls=&#34;request-user&#34; aria-selected=&#34;false&#34;&gt;&#xA;          User&#xA;        &lt;/button&gt;&#xA;      &lt;/li&gt;&#xA;      &lt;li class=&#34;nav-item d-none&#34; role=&#34;presentation&#34; data-params-section&gt;&#xA;        &lt;button class=&#34;nav-link&#34; id=&#34;import-query-params-tab&#34; data-bs-toggle=&#34;tab&#34; data-bs-target=&#34;#import-query-params&#34; type=&#34;button&#34; role=&#34;tab&#34; aria-controls=&#34;query-params&#34; aria-selected=&#34;false&#34;&gt;&#xA;          Payload&#xA;        &lt;/button&gt;&#xA;      &lt;/li&gt;&#xA;      &lt;li class=&#34;nav-item&#34; role=&#34;presentation&#34; data-headers-section&gt;&#xA;        &lt;button class=&#34;nav-link&#34; id=&#34;import-request-headers-tab&#34; data-bs-toggle=&#34;tab&#34; data-bs-target=&#34;#import-request-headers&#34; type=&#34;button&#34; role=&#34;tab&#34; aria-controls=&#34;request-headers&#34; aria-selected=&#34;false&#34;&gt;&#xA;          Headers&#xA;        &lt;/button&gt;&#xA;      &lt;/li&gt;&#xA;    &lt;/ul&gt;&#xA;    &lt;div class=&#34;tab-content p-3 border-top-0 border&#34;&gt;&#xA;      &lt;div class=&#34;tab-pane fade&#34; id=&#34;import-query-params&#34; role=&#34;tabpanel&#34; aria-labelledby=&#34;query-params-tab&#34;&gt;&#xA;        &lt;div class=&#34;d-none&#34; data-query-params-section&gt;&#xA;          &lt;div class=&#34;input-group&#34;&gt;&#xA;            &lt;div class=&#34;section-title pl-2&#34; style=&#34;flex: 1&#34;&gt;Params&lt;/div&gt;&#xA;            &lt;div class=&#34;section-title pl-2 mr-38&#34; style=&#34;flex: 2&#34;&gt;Column Header&lt;/div&gt;&#xA;          &lt;/div&gt;&#xA;          &lt;div data-query-params&gt;&lt;/div&gt;&#xA;          &#xA;        &lt;/div&gt;&#xA;        &lt;div class=&#34;d-none&#34; data-props-section&gt;&#xA;          &lt;div class=&#34;input-group&#34;&gt;&#xA;            &lt;div class=&#34;section-title pl-2&#34; style=&#34;flex: 1&#34;&gt;Properties&lt;/div&gt;&#xA;            &lt;div class=&#34;section-title pl-2 mr-38&#34; style=&#34;flex: 2&#34;&gt;Column Header&lt;/div&gt;&#xA;          &lt;/div&gt;&#xA;          &lt;div data-props&gt;&lt;/div&gt;&#xA;          &lt;button data-add-request-prop-btn class=&#34;mt-2 btn btn-outline-success&#34; type=&#34;button&#34;&gt;&#xA;            &amp;plus;&#xA;          &lt;/button&gt;&#xA;        &lt;/div&gt;&#xA;        &lt;div class=&#34;d-none&#34; data-items-section&gt;&#xA;          &lt;div class=&#34;input-group&#34;&gt;&#xA;            &lt;div class=&#34;section-title pl-2&#34; style=&#34;flex: 1&#34;&gt;Items&lt;/div&gt;&#xA;            &lt;div class=&#34;section-title pl-2 mr-38&#34; style=&#34;flex: 2&#34;&gt;Column Header&lt;/div&gt;&#xA;          &lt;/div&gt;&#xA;          &lt;div data-items&gt;&lt;/div&gt;&#xA;          &#xA;        &lt;/div&gt;&#xA;        &lt;div class=&#34;d-none&#34; data-price-section&gt;&#xA;          &lt;div class=&#34;input-group&#34;&gt;&#xA;            &lt;div class=&#34;section-title pl-2&#34; style=&#34;flex: 1&#34;&gt;Price&lt;/div&gt;&#xA;            &lt;div class=&#34;section-title pl-2 mr-38&#34; style=&#34;flex: 2&#34;&gt;Column Header&lt;/div&gt;&#xA;          &lt;/div&gt;&#xA;          &lt;div data-price&gt;&lt;/div&gt;&#xA;          &#xA;        &lt;/div&gt;&#xA;        &lt;div class=&#34;d-none&#34; data-subscriptions-section&gt;&#xA;          &lt;div class=&#34;input-group&#34;&gt;&#xA;            &lt;div class=&#34;section-title pl-2&#34; style=&#34;flex: 1&#34;&gt;Subscriptions&lt;/div&gt;&#xA;            &lt;div class=&#34;section-title pl-2 mr-38&#34; style=&#34;flex: 2&#34;&gt;Column Header&lt;/div&gt;&#xA;          &lt;/div&gt;&#xA;          &lt;div data-subscriptions&gt;&lt;/div&gt;&#xA;          &#xA;        &lt;/div&gt;&#xA;        &lt;div class=&#34;d-none&#34; data-json-body-section&gt;&#xA;          &lt;div class=&#34;section-title&#34;&gt;JSON Body&lt;/div&gt;&#xA;          &lt;div class=&#34;ace-border&#34;&gt;&#xA;            &lt;div id=&#34;import&#34; class=&#34;ace-editor&#34; data-json-body&gt;&lt;/div&gt;&#xA;          &lt;/div&gt;&#xA;        &lt;/div&gt;&#xA;      &lt;/div&gt;&#xA;      &lt;div class=&#34;tab-pane fade show active&#34; id=&#34;import-request-source&#34; role=&#34;tabpanel&#34; aria-labelledby=&#34;request-source-tab&#34;&gt;&#xA;        &lt;div class=&#34;d-none&#34; data-source-params-section&gt;&#xA;          &lt;div class=&#34;input-group&#34;&gt;&#xA;            &lt;div class=&#34;section-title pl-2&#34; style=&#34;flex: 1&#34;&gt;File Params&lt;/div&gt;&#xA;            &lt;div class=&#34;section-title pl-2 mr-38&#34; style=&#34;flex: 2&#34;&gt;Value&lt;/div&gt;&#xA;          &lt;/div&gt;&#xA;          &lt;div data-source-params&gt;&lt;/div&gt;&#xA;          &#xA;        &lt;/div&gt;&#xA;      &lt;/div&gt;&#xA;      &lt;div class=&#34;tab-pane fade show&#34; id=&#34;import-request-sftp&#34; role=&#34;tabpanel&#34; aria-labelledby=&#34;request-sftp-tab&#34;&gt;&#xA;        &lt;div class=&#34;d-none&#34; data-source-sftp-section&gt;&#xA;          &lt;div&gt;&lt;i&gt;Complete only if client-hosted SFTP (leave blank if Attentive is host)&lt;/i&gt;&lt;/div&gt;&#xA;          &lt;div class=&#34;input-group&#34;&gt;&#xA;            &lt;div class=&#34;section-title pl-2&#34; style=&#34;flex: 1&#34;&gt;Client SFTP&lt;/div&gt;&#xA;            &lt;div class=&#34;section-title pl-2 mr-38&#34; style=&#34;flex: 2&#34;&gt;Value&lt;/div&gt;&#xA;          &lt;/div&gt;&#xA;          &lt;div data-source-sftp&gt;&lt;/div&gt;&#xA;          &#xA;        &lt;/div&gt;&#xA;      &lt;/div&gt;&#xA;      &lt;div class=&#34;tab-pane fade show&#34; id=&#34;import-request-encryption&#34; role=&#34;tabpanel&#34; aria-labelledby=&#34;request-encryption-tab&#34;&gt;&#xA;        &lt;div class=&#34;d-none&#34; data-source-encryption-section&gt;&#xA;          &lt;div&gt;&lt;i&gt;Complete only if file is encrypted (leave blank if file is not encrypted)&lt;/i&gt;&lt;/div&gt;&#xA;          &lt;div class=&#34;input-group&#34;&gt;&#xA;            &lt;div class=&#34;section-title pl-2&#34; style=&#34;flex: 1&#34;&gt;File Encryption&lt;/div&gt;&#xA;            &lt;div class=&#34;section-title pl-2 mr-38&#34; style=&#34;flex: 2&#34;&gt;Value&lt;/div&gt;&#xA;          &lt;/div&gt;&#xA;          &lt;div data-source-encryption&gt;&lt;/div&gt;&#xA;          &#xA;        &lt;/div&gt;&#xA;      &lt;/div&gt;&#xA;      &lt;div class=&#34;tab-pane fade&#34; id=&#34;import-request-meta&#34; role=&#34;tabpanel&#34; aria-labelledby=&#34;request-meta-tab&#34;&gt;&#xA;        &lt;div class=&#34;d-none&#34; data-meta-params-section&gt;&#xA;          &lt;div class=&#34;input-group&#34;&gt;&#xA;            &lt;div class=&#34;section-title pl-2&#34; style=&#34;flex: 1&#34;&gt;Meta Params&lt;/div&gt;&#xA;            &lt;div class=&#34;section-title pl-2 mr-38&#34; style=&#34;flex: 2&#34;&gt;Value&lt;/div&gt;&#xA;          &lt;/div&gt;&#xA;          &lt;div data-meta&gt;&lt;/div&gt;&#xA;          &#xA;        &lt;/div&gt;&#xA;      &lt;/div&gt;&#xA;      &lt;div class=&#34;tab-pane fade&#34; id=&#34;import-request-headers&#34; role=&#34;tabpanel&#34; aria-labelledby=&#34;request-headers-tab&#34;&gt;&#xA;        &lt;div class=&#34;&#34; data-headers-params-section&gt;&#xA;          &lt;div class=&#34;input-group&#34;&gt;&#xA;            &lt;div class=&#34;section-title pl-2&#34; style=&#34;flex: 1&#34;&gt;Authorization Header&lt;/div&gt;&#xA;            &lt;div class=&#34;section-title pl-2 mr-38&#34; style=&#34;flex: 2&#34;&gt;Bearer Token&lt;/div&gt;&#xA;          &lt;/div&gt;&#xA;          &lt;div data-headers&gt;&lt;/div&gt;&#xA;          &#xA;        &lt;/div&gt;&#xA;      &lt;/div&gt;&#xA;      &lt;div class=&#34;tab-pane fade&#34; id=&#34;import-request-user&#34; role=&#34;tabpanel&#34; aria-labelledby=&#34;request-user-tab&#34;&gt;&#xA;        &lt;div class=&#34;d-none&#34; data-user-params-section&gt;&#xA;          &lt;div class=&#34;input-group&#34;&gt;&#xA;            &lt;div class=&#34;section-title pl-2&#34; style=&#34;flex: 1&#34;&gt;User Properties&lt;/div&gt;&#xA;            &lt;div class=&#34;section-title pl-2 mr-38&#34; style=&#34;flex: 2&#34;&gt;Column Header&lt;/div&gt;&#xA;          &lt;/div&gt;&#xA;          &lt;div data-user&gt;&lt;/div&gt;&#xA;          &lt;button data-add-request-user-btn class=&#34;mt-2 btn btn-outline-success&#34; type=&#34;button&#34;&gt;&#xA;            &amp;plus;&#xA;          &lt;/button&gt;&#xA;        &lt;/div&gt;&#xA;        &lt;div class=&#34;d-none&#34; data-user-custom-section&gt;&#xA;          &lt;div class=&#34;input-group&#34;&gt;&#xA;            &lt;div class=&#34;section-title pl-2&#34; style=&#34;flex: 1&#34;&gt;Custom Identifiers&lt;/div&gt;&#xA;            &lt;div class=&#34;section-title pl-2 mr-38&#34; style=&#34;flex: 2&#34;&gt;Column Header&lt;/div&gt;&#xA;          &lt;/div&gt;&#xA;          &lt;div data-user-custom&gt;&lt;/div&gt;&#xA;          &#xA;        &lt;/div&gt;&#xA;      &lt;/div&gt;&#xA;      &lt;div class=&#34;tab-pane fade&#34; id=&#34;import-request-schedule&#34; role=&#34;tabpanel&#34; aria-labelledby=&#34;request-schedule-tab&#34;&gt;&#xA;        &lt;div class=&#34;d-none&#34; data-schedule-params-section&gt;&#xA;          &lt;div class=&#34;input-group&#34;&gt;&#xA;            &lt;div class=&#34;section-title pl-2&#34; style=&#34;flex: 1&#34;&gt;Schedule Params&lt;/div&gt;&#xA;            &lt;div class=&#34;section-title pl-2 mr-38&#34; style=&#34;flex: 2&#34;&gt;Value&lt;/div&gt;&#xA;          &lt;/div&gt;&#xA;          &lt;div data-schedule&gt;&lt;/div&gt;&#xA;          &#xA;        &lt;/div&gt;&#xA;      &lt;/div&gt;&#xA;    &lt;/div&gt;&#xA;  &lt;/div&gt;&#xA;  &lt;div class=&#34;&#34; data-response-section&gt;&#xA;    &lt;div class=&#34;border-top-0 border p-3&#34;&gt;&#xA;      &lt;div class=&#34;section-title&#34;&gt;Source Payload&lt;/div&gt;&#xA;      &lt;div class=&#34;ace-border&#34;&gt;&#xA;        &lt;div id=&#34;import&#34; class=&#34;ace-editor&#34; data-source-payload&gt;&lt;/div&gt;&#xA;      &lt;/div&gt;&#xA;    &lt;/div&gt;&#xA;    &lt;div class=&#34;border-top-0 border p-3&#34;&gt;&#xA;      &lt;div class=&#34;section-title&#34;&gt;Target Payload&lt;/div&gt;&#xA;      &lt;div class=&#34;ace-border&#34;&gt;&#xA;        &lt;div id=&#34;import&#34; class=&#34;ace-editor&#34; data-target-payload&gt;&lt;/div&gt;&#xA;      &lt;/div&gt;&#xA;    &lt;/div&gt;&#xA;    &lt;div class=&#34;d-none border-top-0 border p-3&#34;&gt;&#xA;      &lt;div class=&#34;section-title&#34;&gt;Response&lt;/div&gt;&#xA;      &lt;div class=&#34;d-flex my-1&#34;&gt;&#xA;        &lt;div class=&#34;mr-3&#34;&gt;Status: &lt;span data-status&gt;&lt;/span&gt;&lt;/div&gt;&#xA;      &lt;/div&gt;&#xA;      &lt;div class=&#34;ace-border&#34;&gt;&#xA;        &lt;div id=&#34;import&#34; class=&#34;ace-editor&#34; data-json-response-body&gt;&lt;/div&gt;&#xA;      &lt;/div&gt;&#xA;    &lt;/div&gt;&#xA;  &lt;/div&gt;&#xA;  &#xA;  &lt;template data-key-value-template&gt;&#xA;    &lt;div class=&#34;input-group my-1&#34; data-key-value-pair&gt;&#xA;      &lt;input type=&#34;text&#34; data-key class=&#34;form-control&#34; style=&#34;flex: 1&#34; placeholder=&#34;Key&#34; value=&#34;&#34; /&gt;&#xA;      &lt;input type=&#34;text&#34; data-value class=&#34;form-control&#34; style=&#34;flex: 2&#34; placeholder=&#34;Value&#34; data-curly-braces=&#34;&#34; value=&#34;&#34; /&gt;&#xA;      &lt;button type=&#34;button&#34; data-update-btn class=&#34;btn btn-outline-success curly&#34;&gt;&#xA;        &amp;#123;&amp;nbsp;&amp;#125;&#xA;      &lt;/button&gt;&#xA;      &lt;button type=&#34;button&#34; data-remove-btn class=&#34;btn btn-outline-danger&#34;&gt;&#xA;        &amp;#10005;&#xA;      &lt;/button&gt;&#xA;    &lt;/div&gt;&#xA;  &lt;/template&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;script&gt;&#xA;&#xA;  &#xA;  let apiParams&#xA;  let url = &#39;&#39;&#xA;  let crud = &#39;&#39;&#xA;  let method = &#39;&#39;&#xA;  let headers = {}&#xA;  let data&#xA;  let edsPayload = {}&#xA;  let token = &#39;&#39;&#xA;  let task_id = &#39;&#39;&#xA;  let clientId = &#39;&#39;&#xA;  let clientName = &#39;&#39;&#xA;  let task_name = &#39;&#39;&#xA;  let task_description = &#39;&#39;&#xA;  let filename = &#39;&#39;&#xA;&#xA;  &#xA;  &#xA;  async function fetchApiParams() {&#xA;    &#xA;    const searchParams = new URLSearchParams(window.location.search)&#xA;    const importParam = searchParams.get(&#34;import&#34;)&#xA;    &#xA;    let jsonResponse&#xA;    if (importParam === &#39;true&#39;) {&#xA;      &#xA;      &#xA;      &#xA;      jsonResponse = JSON.parse(localStorage.getItem(&#39;apiParams&#39;))&#xA;      &#xA;    } else {&#xA;      &#xA;      const response = await fetch(&#39;./params.json&#39;)&#xA;      jsonResponse = await response.json()&#xA;    }&#xA;    &#xA;    return jsonResponse&#xA;  }&#xA;&#xA;  fetchApiParams()&#xA;    .then(response =&gt; {&#xA;      apiParams = response&#xA;      console.log(&#34;apiParams:&#34;, apiParams)&#xA;&#xA;      &#xA;      if (&#34;import&#34; == &#39;import&#39;) {&#xA;        parseImportFile(&#34;import&#34;)&#xA;      }&#xA;&#xA;      &#xA;      document.querySelector(&#34;#import [data-url]&#34;).value = apiParams.url&#xA;&#xA;      &#xA;      document.querySelector(&#34;#import [data-method]&#34;).value = apiParams?.method || &#34;GET&#34;&#xA;&#xA;      &#xA;      function renderParams(params, paramId, tabElement, sectionElement, paramElement) {&#xA;        if (params?.length &gt; 0) {&#xA;          document.querySelector(`#${paramId} ${tabElement}`).classList.remove(&#34;d-none&#34;)&#xA;          document.querySelector(`#${paramId} ${sectionElement}`).classList.remove(&#34;d-none&#34;)&#xA;          params?.forEach((param) =&gt; {&#xA;            document.querySelector(`#${paramId} ${paramElement}`).append(&#xA;              createKeyValuePair(&#xA;                &#34;import&#34;,&#xA;                param.key,&#xA;                param.value,&#xA;                param.placeholder,&#xA;                param[&#34;data-curly-braces&#34;],&#xA;                paramElement))&#xA;          })&#xA;        }&#xA;      }&#xA;&#xA;      renderParams(apiParams.queryParams, &#34;import&#34;, &#34;[data-params-section]&#34;, &#34;[data-query-params-section]&#34;, &#34;[data-query-params]&#34;)&#xA;      renderParams(apiParams.propParams, &#34;import&#34;, &#34;[data-params-section]&#34;, &#34;[data-props-section]&#34;, &#34;[data-props]&#34;)&#xA;      renderParams(apiParams.itemsParams, &#34;import&#34;, &#34;[data-params-section]&#34;, &#34;[data-items-section]&#34;, &#34;[data-items]&#34;)&#xA;      renderParams(apiParams.priceParams, &#34;import&#34;, &#34;[data-params-section]&#34;, &#34;[data-price-section]&#34;, &#34;[data-price]&#34;)&#xA;      renderParams(apiParams.subscriptionsParams, &#34;import&#34;, &#34;[data-params-section]&#34;, &#34;[data-subscriptions-section]&#34;, &#34;[data-subscriptions]&#34;)&#xA;      renderParams(apiParams.headerParams, &#34;import&#34;, &#34;[data-headers-section]&#34;, &#34;[data-headers-params-section]&#34;, &#34;[data-headers]&#34;)&#xA;      renderParams(apiParams.userParams, &#34;import&#34;, &#34;[data-user-section]&#34;, &#34;[data-user-params-section]&#34;, &#34;[data-user]&#34;)&#xA;      renderParams(apiParams.customParams, &#34;import&#34;, &#34;[data-user-section]&#34;, &#34;[data-user-custom-section]&#34;, &#34;[data-user-custom]&#34;)&#xA;      renderParams(apiParams.sourceParams, &#34;import&#34;, &#34;[data-source-section]&#34;, &#34;[data-source-params-section]&#34;, &#34;[data-source-params]&#34;)&#xA;      renderParams(apiParams.sftpParams, &#34;import&#34;, &#34;[data-sftp-section]&#34;, &#34;[data-source-sftp-section]&#34;, &#34;[data-source-sftp]&#34;)&#xA;      renderParams(apiParams.encryptionParams, &#34;import&#34;, &#34;[data-encryption-section]&#34;, &#34;[data-source-encryption-section]&#34;, &#34;[data-source-encryption]&#34;)&#xA;      renderParams(apiParams.metaParams, &#34;import&#34;, &#34;[data-meta-section]&#34;, &#34;[data-meta-params-section]&#34;, &#34;[data-meta]&#34;)&#xA;      renderParams(apiParams.scheduleParams, &#34;import&#34;, &#34;[data-schedule-section]&#34;, &#34;[data-schedule-params-section]&#34;, &#34;[data-schedule]&#34;)&#xA;&#xA;      &#xA;      &#xA;      &#xA;      &#xA;      &#xA;      &#xA;      &#xA;      &#xA;      &#xA;      &#xA;      &#xA;&#xA;      &#xA;      &#xA;      &#xA;      &#xA;      &#xA;      &#xA;      &#xA;      &#xA;      &#xA;      &#xA;      &#xA;      &#xA;      &#xA;      &#xA;&#xA;    })&#xA;&#xA;  &#xA;  &#xA;  function addRow(paramId, btnElement, dataElement) {&#xA;    &#xA;    document.querySelector(`#${paramId} ${btnElement}`).addEventListener(&#34;click&#34;, () =&gt; {&#xA;      document.querySelector(`#${paramId} ${dataElement}`).append(&#xA;        createKeyValuePair(`${paramId}`)&#xA;      )&#xA;    })&#xA;  }&#xA;&#xA;  addRow(&#34;import&#34;, &#34;[data-add-request-prop-btn]&#34;, &#34;[data-props]&#34;)&#xA;  &#xA;  &#xA;  &#xA;  &#xA;  &#xA;  addRow(&#34;import&#34;, &#34;[data-add-request-user-btn]&#34;, &#34;[data-user]&#34;)&#xA;  &#xA;  &#xA;  &#xA;  &#xA;&#xA;&#xA;  &#xA;  &#xA;  document.querySelectorAll(&#39;a.gdoc-nav__entry&#39;).forEach(element =&gt; {&#xA;    &#xA;    element.addEventListener(&#34;click&#34;, e =&gt; {&#xA;      &#xA;      const path = new URL(e.srcElement.href).pathname&#xA;      &#xA;      if (path.includes(&#34;/sow&#34;)) {&#xA;        e.preventDefault()&#xA;        console.log(&#34;CLICKED SOW LINK&#34;)&#xA;        localStorage.setItem(&#34;eds-sow&#34;, JSON.stringify(edsPayload))&#xA;        window.open(&#34;../../eds/sow&#34;, &#39;_blank&#39;)&#xA;      } else if (path.includes(&#34;/export&#34;)) {&#xA;        console.log(&#34;CLICKED EXPORT LINK&#34;)&#xA;        console.log(&#34;E:&#34;, e)&#xA;        e.preventDefault()&#xA;        exportDialog.showModal()&#xA;        createFileName()&#xA;        console.log(&#34;EXPORT FILE NAME:&#34;, filename)&#xA;        exportDialog.querySelector(&#34;#filename&#34;).value = filename&#xA;        console.log(&#34;filename:&#34;, filename)&#xA;      } else if (path.includes(&#34;/import&#34;)) {&#xA;        console.log(&#34;CLICKED IMPORT LINK&#34;)&#xA;        e.preventDefault()&#xA;        importDialog.showModal()&#xA;        &#xA;      } else if (path.includes(&#34;/create&#34;)) {&#xA;        e.preventDefault()&#xA;        console.log(&#34;CLICKED CREATE LINK&#34;)&#xA;        window.open(&#34;https://ui.attentivemobile.com/tactical/event-destinations/create?companyId=&#34; + edsPayload.metaPayload.clientId, &#39;_blank&#39;)&#xA;      } else if (path.includes(&#34;/view&#34;)) {&#xA;        e.preventDefault()&#xA;        console.log(&#34;CLICKED VIEW LINK&#34;)&#xA;        window.open(&#34;https://ui.attentivemobile.com/tactical/event-destinations/jobs/&#34; + edsPayload.task_id, &#39;_blank&#39;)&#xA;      } else if (path.match(/get|post|put/)) {&#xA;        e.preventDefault()&#xA;        if (edsPayload.task_id) task_id = edsPayload.task_id&#xA;        if (edsPayload.metaPayload.clientId) clientId = edsPayload.metaPayload.clientId&#xA;        if (edsPayload.metaPayload.clientName) clientName = edsPayload.metaPayload.clientName&#xA;        console.log(&#34;TASK ID:&#34;, task_id)&#xA;        console.log(&#34;CLIENT ID:&#34;, clientId)&#xA;        console.log(&#34;CLIENT NAME:&#34;, clientName)&#xA;        apiDialog.querySelector(&#34;#task_id&#34;).value = task_id&#xA;        apiDialog.querySelector(&#34;#clientId&#34;).value = clientId&#xA;        if (path.includes(&#34;/get&#34;)) {&#xA;          console.log(&#34;CLICKED GET&#34;)&#xA;          apiDialog.querySelector(&#34;#crud&#34;).value = &#34;READ&#34;&#xA;          apiDialog.querySelector(&#34;#method&#34;).value = &#34;GET&#34;&#xA;          apiDialog.querySelector(&#34;h2&#34;).textContent = &#39;Fetch Existing EDS Job&#39;&#xA;          apiDialog.querySelector(&#34;#task_id&#34;).placeholder = &#34;Enter task_id of job to fetch&#34;&#xA;          apiDialog.querySelector(&#34;.client-name&#34;).classList.add(&#34;d-none&#34;)&#xA;          apiDialog.querySelector(&#34;.task-id&#34;).classList.remove(&#34;d-none&#34;)&#xA;        } else if (path.includes(&#34;/post&#34;)) {&#xA;          console.log(&#34;CLICKED POST&#34;)&#xA;          createFileName()&#xA;          task_name = filename&#xA;          console.log(&#34;TASK NAME:&#34;, task_name)&#xA;          apiDialog.querySelector(&#34;#crud&#34;).value = &#34;CREATE&#34;&#xA;          apiDialog.querySelector(&#34;#method&#34;).value = &#34;POST&#34;&#xA;          apiDialog.querySelector(&#34;h2&#34;).textContent = &#39;Create New EDS Job&#39;&#xA;          apiDialog.querySelector(&#34;#task_name&#34;).value = task_name&#xA;          apiDialog.querySelector(&#34;.client-name&#34;).classList.remove(&#34;d-none&#34;)&#xA;          apiDialog.querySelector(&#34;.task-id&#34;).classList.add(&#34;d-none&#34;)&#xA;        } else if (path.includes(&#34;/put&#34;)) {&#xA;          console.log(&#34;CLICKED PUT&#34;)&#xA;          apiDialog.querySelector(&#34;#crud&#34;).value = &#34;UPDATE&#34;&#xA;          apiDialog.querySelector(&#34;#method&#34;).value = &#34;POST&#34;&#xA;          apiDialog.querySelector(&#34;h2&#34;).textContent = &#39;Update Existing EDS Job&#39;&#xA;          apiDialog.querySelector(&#34;#task_id&#34;).placeholder = &#34;Enter task_id of job to update&#34;&#xA;          apiDialog.querySelector(&#34;.client-name&#34;).classList.add(&#34;d-none&#34;)&#xA;          apiDialog.querySelector(&#34;.task-id&#34;).classList.remove(&#34;d-none&#34;)&#xA;        }&#xA;        apiDialog.showModal()&#xA;      }&#xA;    })&#xA;  })&#xA;&#xA;  function createFileName() {&#xA;    console.log(&#34;filename BEFORE:&#34;, filename)&#xA;    filename = &#39;&#39;&#xA;    console.log(&#34;filename RESET:&#34;, filename)&#xA;    if (edsPayload.metaPayload[&#34;ticketUrl&#34;] &amp;&amp; edsPayload.metaPayload[&#34;ticketUrl&#34;].length &gt; 0 &amp;&amp; edsPayload.metaPayload[&#34;ticketUrl&#34;].match(/\d+$/)) {&#xA;      filename += `EDS-${edsPayload.metaPayload[&#34;ticketUrl&#34;].match(/\d+$/).toString()} - `&#xA;    }&#xA;    if (edsPayload.metaPayload[&#34;clientName&#34;] &amp;&amp; edsPayload.metaPayload[&#34;clientName&#34;].length &gt; 0) {&#xA;      filename += `${edsPayload.metaPayload[&#34;clientName&#34;]} `&#xA;    }&#xA;    console.log(&#34;edsPayload.request_details.url:&#34;, edsPayload.request_details.url)&#xA;    let apiFileName = getApiFromUrl(edsPayload.request_details.url)&#xA;    console.log(&#34;apiFileName:&#34;, apiFileName)&#xA;&#xA;    filename += `- ${apiFileName.name}`&#xA;    if (filename === null || filename === &#39;&#39;) filename = &#39;data&#39;&#xA;    console.log(&#34;filename:&#34;, filename)&#xA;  }&#xA;&#xA;  &#xA;  &#xA;  function exportJson(element) {&#xA;    console.log(&#34;exportJson(element):&#34;, element)&#xA;    const data = &#34;text/json;charset=utf-8;filename=foo,&#34; + encodeURIComponent(JSON.stringify(edsPayload))&#xA;    const downloadBtn = element&#xA;    console.log(&#34;downloadBtn:&#34;, downloadBtn)&#xA;    downloadBtn.href = &#39;data:&#39; + data&#xA;    console.log(&#34;downloadBtn.href:&#34;, downloadBtn.href)&#xA;    downloadBtn.download = `${filename}.json`&#xA;    console.log(&#34;downloadBtn.download:&#34;, downloadBtn.download)&#xA;  }&#xA;&#xA;  &#xA;  &#xA;  const importElement = document.querySelector(&#34;#json_upload&#34;)&#xA;  &#xA;  &#xA;  importElement.addEventListener(&#34;change&#34;, importJson)&#xA;&#xA;  &#xA;  function importJson() {&#xA;    console.log(&#34;IMPORT JSON&#34;)&#xA;    const files = importElement.files&#xA;    &#xA;    let jsonFile&#xA;    if (files.length &gt; 0) {&#xA;      jsonFile = importElement.files[0]&#xA;    }&#xA;    const reader = new FileReader()&#xA;    reader.onload = function (e) {&#xA;      const text = e.target.result&#xA;      localStorage.setItem(&#34;eds-import&#34;, text)&#xA;      window.location.href = &#34;../../eds/import&#34;&#xA;    }&#xA;    reader.readAsText(jsonFile)&#xA;  }&#xA;&#xA;  &#xA;  &#xA;  const apiDialog = document.querySelector(&#34;#apiDialog&#34;)&#xA;  closeDialog(apiDialog)&#xA;&#xA;  &#xA;  const exportDialog = document.querySelector(&#34;#exportDialog&#34;)&#xA;  closeDialog(exportDialog)&#xA;&#xA;  &#xA;  const importDialog = document.querySelector(&#34;#importDialog&#34;)&#xA;  closeDialog(importDialog)&#xA;&#xA;  &#xA;  function closeDialog(dialog) {&#xA;    dialog.addEventListener(&#34;click&#34;, e =&gt; {&#xA;      const dialogDimensions = dialog.getBoundingClientRect()&#xA;      if (&#xA;        e.clientX &lt; dialogDimensions.left ||&#xA;        e.clientX &gt; dialogDimensions.right ||&#xA;        e.clientY &lt; dialogDimensions.top ||&#xA;        e.clientY &gt; dialogDimensions.bottom&#xA;      ) {&#xA;        dialog.close()&#xA;      }&#xA;    })&#xA;  }&#xA;&#xA;  exportDialog.querySelector(&#34;#exportDialogSubmitBtn&#34;).addEventListener(&#34;click&#34;, (e) =&gt; {&#xA;    console.log(&#34;E:&#34;, e)&#xA;    console.log(&#34;CLICKED EXPORT DIALOG SUBMIT BUTTON&#34;)&#xA;    filename = document.querySelector(&#34;#filename&#34;).value&#xA;    console.log(&#34;filename:&#34;, filename)&#xA;    exportJson(e.srcElement)&#xA;    exportDialog.close()&#xA;  })&#xA;&#xA;  &#xA;  apiDialog.querySelector(&#34;#clientIdUrl&#34;).addEventListener(&#34;click&#34;, (e) =&gt; {&#xA;    e.preventDefault()&#xA;    console.log(&#34;CLICKED CID URL&#34;, e)&#xA;    &#xA;    const companyId = document.querySelector(&#34;#clientId&#34;).value&#xA;    console.log(&#34;companyId&#34;, companyId)&#xA;    window.open(&#34;https://ui.attentivemobile.com/home&#34; + &#34;?companyId=&#34; + companyId, &#34;_blank&#34;)&#xA;  })&#xA;&#xA;  &#xA;  &#xA;  apiDialog.querySelector(&#34;#apiDialogSubmitBtn&#34;).addEventListener(&#34;click&#34;, () =&gt; {&#xA;    console.log(&#34;#apiDialogSubmitBtn click:&#34;)&#xA;    token = document.querySelector(&#34;#token&#34;).value&#xA;    console.log(&#34;TOKEN:&#34;, token)&#xA;    task_id = document.querySelector(&#34;#task_id&#34;).value&#xA;    console.log(&#34;task_id:&#34;, task_id)&#xA;    clientId = document.querySelector(&#34;#clientId&#34;).value&#xA;    console.log(&#34;clientId:&#34;, clientId)&#xA;    task_name = document.querySelector(&#34;#task_name&#34;).value&#xA;    console.log(&#34;task_name:&#34;, task_name)&#xA;    console.log(&#34;TASK ID VALUE&#34;, task_id)&#xA;    crud = document.querySelector(&#34;#crud&#34;).value&#xA;    method = document.querySelector(&#34;#method&#34;).value&#xA;    headers[&#39;Authorization&#39;] = `Bearer ${token}`&#xA;    if (!token) {&#xA;      alert(&#34;You must enter an attentive-auth-token&#34;)&#xA;      return&#xA;    }&#xA;    const grantsTokenString = token.split(&#39;.&#39;)[1]&#xA;    if (!grantsTokenString) {&#xA;      alert(&#34;Invalid token&#34;)&#xA;      return&#xA;    } else {&#xA;      console.log(&#34;grantsTokenString:&#34;, grantsTokenString)&#xA;      const grants = JSON.parse(atob(grantsTokenString))&#xA;      console.log(&#34;grants:&#34;, grants)&#xA;      const selectedCompanyId = grants.data.selectedCompanyId&#xA;      console.log(&#34;selectedCompanyId:&#34;, selectedCompanyId)&#xA;      if (clientId != selectedCompanyId) {&#xA;        alert(&#34;Wrong token for this client ID!&#34;)&#xA;        return&#xA;      }&#xA;    }&#xA;    if (method === &#34;POST&#34;) {&#xA;      url = &#34;https://johnchaffee.ngrok.io/v1/event-destination/post-mapping&#34;&#xA;      edsPayload.task_id = task_id&#xA;      data = edsPayload&#xA;      headers[&#39;content-type&#39;] = &#39;application/json&#39;&#xA;    } else {&#xA;      console.log(&#34;GET&#34;)&#xA;      url = &#34;https://johnchaffee.ngrok.io/v1/event-destination/get-mapping/&#34; + task_id&#xA;    }&#xA;    console.log(&#34;=====&#34;)&#xA;    console.log(&#39;URL:&#39;, url)&#xA;    console.log(&#39;CRUD:&#39;, crud)&#xA;    console.log(&#39;METHOD:&#39;, method)&#xA;    console.log(&#39;HEADERS:&#39;, headers)&#xA;    console.log(&#39;DATA:&#39;, data)&#xA;    console.log(&#34;=====&#34;)&#xA;&#xA;    if (crud === &#34;READ&#34; || crud === &#34;UPDATE&#34;) {&#xA;      if (task_id) {&#xA;        console.log(&#34;if task_id:&#34;, task_id)&#xA;        edsMapping()&#xA;      } else {&#xA;        alert(&#34;You must enter a task ID&#34;)&#xA;      }&#xA;    } else if (crud === &#34;CREATE&#34;) {&#xA;      if (task_name === &#39;&#39;) {&#xA;        alert(&#34;You must enter a Task Name&#34;)&#xA;      } else {&#xA;        createTask()&#xA;      }&#xA;    }&#xA;  })&#xA;&#xA;  &#xA;  &#xA;  async function edsMapping() {&#xA;    console.log(&#34;axios edsMapping&#34;)&#xA;    console.log(&#34;axios edsMapping task_id:&#34;, task_id)&#xA;    axios({&#xA;      url,&#xA;      method,&#xA;      headers,&#xA;      data&#xA;    })&#xA;      .then(function (response) {&#xA;        &#xA;        console.log(&#39;SUCCESS&#39;)&#xA;        console.log(&#39;RESPONSE.DATA:&#39;, response.data)&#xA;        console.log(&#34;METHOD:&#34;, method)&#xA;        if (method === &#34;POST&#34;) {&#xA;          &#xA;          window.open(&#34;https://ui.attentivemobile.com/tactical/event-destinations/jobs/&#34; + task_id, &#39;_blank&#39;)&#xA;        } else {&#xA;          &#xA;          localStorage.setItem(&#34;eds-import&#34;, JSON.stringify(response.data))&#xA;          window.location.href = &#34;../../eds/import&#34;&#xA;        }&#xA;      })&#xA;      .catch(function (error) {&#xA;        console.log(&#39;CATCH&#39;)&#xA;        if (error.response) {&#xA;          console.log(&#34;ERROR.RESPONSE&#34;)&#xA;          &#xA;          &#xA;          console.log(&#34;ERROR.toJSON().STATUS:&#34;, error.toJSON().status)&#xA;          console.log(&#34;ERROR.toJSON().CODE:&#34;, error.toJSON().code)&#xA;          console.log(&#34;ERROR.toJSON().MESSAGE:&#34;, error.toJSON().message)&#xA;          alert(error.toJSON().message)&#xA;          &#xA;          &#xA;        } else if (error.request) {&#xA;          console.log(&#34;ERROR.REQUEST&#34;)&#xA;          &#xA;          &#xA;          &#xA;          console.log(error.request)&#xA;          alert(error.request)&#xA;        } else {&#xA;          console.log(&#34;ERROR.MESSAGE&#34;)&#xA;          &#xA;          console.log(&#39;Error&#39;, error.message)&#xA;          alert(error.request)&#xA;        }&#xA;      })&#xA;      .finally(function () {&#xA;        &#xA;        console.log(&#39;FINALLY&#39;)&#xA;      })&#xA;  }&#xA;&#xA;  &#xA;  async function createTask() {&#xA;    console.log(&#34;axios createTask&#34;)&#xA;    axios({&#xA;      url: &#34;https://johnchaffee.ngrok.io/v1/event-destination/create-task&#34;,&#xA;      method,&#xA;      headers,&#xA;      data: {&#xA;        &#34;task_name&#34;: task_name,&#xA;        &#34;task_description&#34;: task_description&#xA;      }&#xA;    })&#xA;      .then(function (response) {&#xA;        &#xA;        console.log(&#39;SUCCESS&#39;)&#xA;        console.log(&#39;RESPONSE.DATA:&#39;, response.data)&#xA;        console.log(&#34;METHOD:&#34;, method)&#xA;        task_id = response.data.task_id&#xA;        edsPayload.task_id = task_id&#xA;        &#xA;        &#xA;        edsMapping()&#xA;      })&#xA;      .catch(function (error) {&#xA;        console.log(&#39;CATCH&#39;)&#xA;        if (error.response) {&#xA;          console.log(&#34;ERROR.RESPONSE&#34;)&#xA;          &#xA;          &#xA;          console.log(&#34;ERROR.toJSON().STATUS:&#34;, error.toJSON().status)&#xA;          console.log(&#34;ERROR.toJSON().CODE:&#34;, error.toJSON().code)&#xA;          console.log(&#34;ERROR.toJSON().MESSAGE:&#34;, error.toJSON().message)&#xA;          alert(error.toJSON().message)&#xA;          &#xA;          &#xA;        } else if (error.request) {&#xA;          console.log(&#34;ERROR.REQUEST&#34;)&#xA;          &#xA;          &#xA;          &#xA;          console.log(error.request)&#xA;          alert(error.request)&#xA;        } else {&#xA;          console.log(&#34;ERROR.MESSAGE&#34;)&#xA;          &#xA;          console.log(&#39;Error&#39;, error.message)&#xA;          alert(error.message)&#xA;        }&#xA;      })&#xA;      .finally(function () {&#xA;        &#xA;        console.log(&#39;FINALLY&#39;)&#xA;      })&#xA;  }&#xA;&#xA;  &#xA;  document.addEventListener(&#34;readystatechange&#34;, function (e) {&#xA;    if (e.target.readyState === &#34;complete&#34;) {&#xA;      &#xA;      updatePayload(e, &#34;import&#34;)&#xA;    }&#xA;  })&#xA;  document.querySelector(&#34;[data-form]&#34;).addEventListener(&#39;keyup&#39;, function (e) {&#xA;    updatePayload(e, &#34;import&#34;)&#xA;  })&#xA;  document.querySelector(&#34;[data-form]&#34;).addEventListener(&#39;click&#39;, function (e) {&#xA;    updatePayload(e, &#34;import&#34;)&#xA;  })&#xA;&#xA;&lt;/script&gt;</description>
    </item>
  </channel>
</rss>
